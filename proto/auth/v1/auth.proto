syntax = "proto3";

package auth.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

// user is created in auth0 here
service AuthService {
  // adding user to auth0.
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse){
     option (google.api.http) = {
      post : "/CreateAccount"
      body : "*"
    };
  };  

  // logs a user in
  rpc SignIn(SignInRequest) returns (SignInResponse){
     option (google.api.http) = {
      post : "/SignIn"
      body : "*"
    };
  };
  // gets a user from auth0
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse){
     option (google.api.http) = {
      post : "/GetAccount"
      body : "*"
    };
  };

  // updates a user in auth0
  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse){
     option (google.api.http) = {
      post : "/UpdateAccount"
      body : "*"
    };
  };

  // signs a user out
  rpc SignOut(SignOutRequest) returns (SignOutResponse){
     option (google.api.http) = {
      post : "/SignOut"
      body : "*"
    };
  };
}

// Create contains information needed to create a new authUser.
message CreateAccountRequest  { 
  RegisterAuthUser register_auth_user = 1 [(validate.rules).message.required = true]; 
}
// CreateResponse returns the newly created authUser for the Create method.
message CreateAccountResponse { 
  string id = 1;
  RegisterAuthUser register_auth_user = 2; 
}

// logs a user in
message SignInRequest {
   AuthUserSignIn auth_user_sign_in = 1 [(validate.rules).message.required = true];
}
// returns the user that was signed in
message SignInResponse {
    string access_token = 1;
    string id_token = 2;
    string scope = 3;
    string token_type = 4;
    int32 expires_in = 5;
}

// GetAccountRequest contains the information needed to get a user from auth0
message GetAccountRequest {
    string access_token = 1;
}

// GetAccountResponse returns the user that was requested
message GetAccountResponse {
   UserInfo user_info = 1;
}

// updates user info 
message UpdateAccountRequest {
   UserInfo user_info = 1 [(validate.rules).message.required = true];
}

// returns the user that was updated
message UpdateAccountResponse {
   UserInfo user_info = 1;
}

// SignOutRequest contains the information needed to sign a user out
message SignOutRequest {
//     string access_token = 1;
}

// SignOutResponse returns the user null value
message SignOutResponse {
    string message = 1;
}

// Data types for requests and responses
// values needed to sign in a user
message AuthUserSignIn {
    string username = 1;
    string password = 2;
    string grant_type = 3;
    string audience = 4;
    string client_id = 5;
    string client_secret = 6;
}

// conatains the values used for submitting an entry to auth0 
message RegisterAuthUser { 
    string given_name = 1;
    string family_name = 2;
    string email = 3;
    string nickname = 4;
    string password = 5;
    string connection  = 6;
    string client_id = 7;
}

// user details
message UserInfo {
    string given_name = 1;
    string family_name = 2;
    string email = 3;
    string email_verified = 4;
    string name = 5;
    string nickname = 6;
    string picture = 7;
    string sub = 8;
    string updated_at = 9;
    string user_id = 10;
    string username = 11;
    string password = 12;
    Metadata metadata = 13;
}

// metadata
message Metadata {
    string id = 1;
}